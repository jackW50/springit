<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>springit</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>springit</name>
  <description>reddit clone</description>
  
  <properties>
  	<maven.compiler.source>1.8</maven.compiler.source>
  	<maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  <parent>
  	<groupId>org.springframework.boot</groupId>
  	<artifactId>spring-boot-starter-parent</artifactId>
  	<version>2.1.0.RELEASE</version>
  	<relativePath/> <!--  lookup parent from repository -->
  </parent>
  
  <dependencies>
  <!-- 
  	Brings in transitive dependency for logging.
   -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-web</artifactId>
  	</dependency>
  	
  	
  	<!--Dev Tools 
  	Automatically turns off caching for the template engines.
  		-Automatic Restart
  			- re-start vs re-load
  				- So we don't have to manually re-start when we make changes.
  				- 
  	 -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-devtools</artifactId>
  	</dependency>
  	
  	<!-- 
  		Actuator
  			- /actuator/env
  	 -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-actuator</artifactId>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-configuration-processor</artifactId>
  		<optional>true</optional>
  	</dependency>
  	
  	<!-- 
  		Java Persistence API
  			- An interface specification that describes 
  			The management of relational data in applications using Java
  			- javax.persistence Package contains the main API.
  			-JPQL=Java Persistence Query Language.
  			- Object relational metadata
  		Spring Data
  			- To provide a familiar and consistent programming model for data access across the board.
  			- Contains a ton of modules.
  			- Contains the JPA specification.
  				-Uses hibernate under the hood. The starters help us get going right away.
  	 	
  	 -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-data-jpa</artifactId>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-thymeleaf</artifactId>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-test</artifactId>
  	</dependency>
  	
  	<dependency>
  		<groupId>com.h2database</groupId>
  		<artifactId>h2</artifactId>
  		<scope>runtime</scope>
  	</dependency>
  		
  	<dependency>
  		<groupId>io.springfox</groupId>
  		<artifactId>springfox-swagger2</artifactId>
  		<version>2.7.0</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>io.springfox</groupId>
  		<artifactId>springfox-swagger-ui</artifactId>
  		<version>2.7.0</version>
  	</dependency>
  	
   	<dependency>
  		<groupId>org.projectlombok</groupId>
  		<artifactId>lombok</artifactId>
  		<version>1.18.2</version>
  		<optional>true</optional>
  	</dependency> 
  	
  	
  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.springframework.boot</groupId>
  			<artifactId>spring-boot-maven-plugin</artifactId>
  		</plugin>
  	</plugins>
  </build>
  
  
</project>